<?php

use DataStructure\ArrayImpl\ArrayImpl;
use Exception;
use PHPUnit\Framework\TestCase;

class ArrayTest extends TestCase
{
    /**
     * @group array
     * @throws Exception
     */
    public function testArray()
    {
        $data = [
            [
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ]
            ],
            [
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ]
            ],
            [
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ],
                [
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                    [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0]
                    ],
                ]
            ]
        ];
        $array = new ArrayImpl(5, [3, 4, 2, 3, 3]);
        $array->value(8, [2, 2, 1, 0, 1]);
        $data[2][2][1][0][1] = 8;
        $array->value(18, [2, 1, 1, 0, 2]);
        $data[2][1][1][0][2] = 18;
        $array->value(28, [1, 2, 1, 0, 2]);
        $data[1][2][1][0][2] = 28;
        $array->value(38, [1, 0, 1, 2, 1]);
        $data[1][0][1][2][1] = 38;
        $array->value(48, [0, 1, 0, 1, 2]);
        $data[0][1][0][1][2] = 48;
        $this->assertEquals(38, $array->assign([1, 0, 1, 2, 1]));
        $this->assertEquals($data, $array->toArray());
    }
}
